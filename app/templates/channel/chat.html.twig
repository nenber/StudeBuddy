{% extends 'base.html.twig' %}

{% block title %}Chat{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="row pt-5">
            <h1>
            {% if (app.user == channel.authorId) %}
                <a href="/messagerie/{{ channel.getParticipant.id }}">
                    <span>{{ channel.getParticipant.firstName }} {{ channel.getParticipant.lastName }}</span>
                </a>
                {% set userProfile = channel.getParticipant.id %}
            {% endif %}
            {% if (app.user == channel.getParticipant) %}
                <a href="/messagerie/{{ channel.authorId.id }}">
                    <span>{{ channel.authorId.firstName }} {{ channel.authorId.lastName }} </span>
                </a>
            </h1>
                {% set userProfile = channel.authorId.id %}
                {% set connected = false %}
                {% for friendship in friendships %}
                    {% if friendship.user.id == app.user.id and friendship.friend.id == userProfile and friendship.hasBeenHelpful == true %}
                        <button class="btn-danger ml-2">
                        <a href="{{ path('friendship_delete_id', {'id': friendship.id}) }}">
                            Retirer cet ami
                        </a>
                        </button>
                        {% set connected = true %}
                    {% endif %}
                {% endfor %}
                {% if not connected %}
                <button class="ml-5">
                    <a href="{{ path('friendship_new_id', {'id': channel.authorId}) }}">
                        Ajouter en ami
                    </a>
                </button>
                {% endif %} 
            {% endif %}
                
            
        </div>

        <div class="container" style="height: 600px">
            <div id="container-message" class="container bg-light h-75 overflow-auto test">
                {% for message in messages %}
                    {% if app.user == message.author %}
                        <div class="row w-75 float-right">
                            <b>{{ message.author.firstname }} {{ message.author.lastname }}</b>
                            <p class="alert alert-info w-100">
                                {{ message.content }}
                            </p>
                        </div>
                    {% else %}
                        <div class="row w-75 float-left">
                            <b><a href="/messagerie/{{ message.author.id }}">{{ message.author.firstname }} {{ message.author.lastname }}
                                </a>

                                </p>
                            </b>
                            <p class="alert alert-success w-100">
                                {{ message.content }}
                            </p>
                        </div>
                    {% endif %}
                {% endfor %}
            </div>
            <div >
                <form id="form" class="container row">
                    <input id="message" class="input-group-text col-sm-9" placeholder="Message" type="text" />
                    <button id="btnEnvoi" type="submit" class="ml-2" >Envoyer</button>
                </form>
            </div>
        </div>
    </div>

{% endblock %}
{% block javascripts %}
    <script>
    
        let chatDiv = document.querySelector('.test');
        chatDiv.scrollTop = chatDiv.scrollHeight; // On souhaite scroller toujours jusqu'au dernier message du chat

        let form = document.getElementById('form');
        function handleForm(event) {
          //  event.preventDefault(); // Empêche la page de se rafraîchir après le submit du formulaire
        }
        form.addEventListener('submit', handleForm);



        const submit = document.getElementById('btnEnvoi');
        submit.onclick = e => { // On change le comportement du submit
            console.log("fefefef")
            const message = document.getElementById('message'); // Récupération du message dans l'input correspondant
            const data = { // La variable data sera envoyée au controller
                'content': message.value, // On transmet le message...
                'channel': {{ channel.id }} // ... Et le canal correspondant
            }
            console.log(data); // Pour vérifier vos informations
            console.log("clique ici !!")

            fetch('/message', { // On envoie avec un post nos datas sur le endpoint /message de notre application
                method: 'POST',
                body: JSON.stringify(data) // On envoie les data sous format JSON
            }).then((response) => {
                message.value = '';
                console.log(response);
                //window.location.reload();
            });
        }



        var interval = 2000;
        var globalMessages = [];
        var contactName = "";
        {% for message in messages %}
            globalMessages.push([{{ message.id }}, {{ message.author.id }},"{{ message.content }}",new Date("{{ message.createdAt|date('d-m-Y H:i:s') }}")])
        {% endfor %}
        {% if app.user.id == channel.authorId.id %}
            contactName = "{{ pa.lastName }} {{ pa.lastName }}"
        {% else %}
            contactName = "{{ channel.authorId.lastName }} {{ channel.authorId.lastName }}"
        {% endif %}
        function makeRequest() {
            httpRequest = new XMLHttpRequest();

            if (!httpRequest) {
            alert('Abandon :( Impossible de créer une instance de XMLHTTP');
            return false;
            }
             var data = new FormData();
            data.append('date', interval);
            data.append('id',"{{ channel.id }}")
            httpRequest.onreadystatechange = function () {
               
                if (httpRequest.readyState === XMLHttpRequest.DONE) {
                    if (httpRequest.status === 200) {
                     let datas = JSON.parse(httpRequest.responseText);
                     let containerMessage = document.getElementById('container-message');
                     globalMessages.forEach((item,index)=>{
                         datas = datas.filter(dat => dat[0] > item[0]);
                     });
                       
                      datas.forEach((item,index)=>{
                          globalMessages.push(item);
                          if(item[1] == {{ app.user.id }})
                          {
                              containerMessage.innerHTML += `
                            <div class="row w-75 float-right">      
                                <b>` + "{{ app.user.firstname }} {{ app.user.lastname }}" + `</b>
                                <p class="alert alert-info w-100">
                                   `+item[2]+`
                                </p>
                            </div>`
                          }
                          else{
                            containerMessage.innerHTML += `<div class="row w-75 float-left">
                                <b><a href="/messagerie/` + item[1] + `">
                                    </a>` + contactName + `</p>
                                </b>
                                <p class="alert alert-success w-100">
                                   `+item[2]+`
                                </p>
                            </div>`
                          }
  
                      })
                     datas = [];
                         let chatDiv = document.querySelector('.test');
                     chatDiv.scrollTop = chatDiv.scrollHeight; 
                     setTimeout(makeRequest, interval);
                    } else {
                    }
                }
            };
            httpRequest.open('POST', "{{ path('message_check') }}");
            httpRequest.send(data);
        }
        setTimeout(makeRequest, interval);
        
    </script>
{% endblock %}